vendor_name = ModelSim
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/ShiftRegister.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/RippleCarryAdder.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/ArithmaticUnit.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/8BitMultiplier-toplevel.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/testbench.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/HexDriver.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/mux8.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/counter.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/controlUnit.sv
source_file = 1, C:/Users/Brock/School/ECE385/GitLab/ece385/Lab5/db/Multiplier.cbx.xml
design_name = Multiplier
instance = comp, \x~output , x~output, Multiplier, 1
instance = comp, \Aval[0]~output , Aval[0]~output, Multiplier, 1
instance = comp, \Aval[1]~output , Aval[1]~output, Multiplier, 1
instance = comp, \Aval[2]~output , Aval[2]~output, Multiplier, 1
instance = comp, \Aval[3]~output , Aval[3]~output, Multiplier, 1
instance = comp, \Aval[4]~output , Aval[4]~output, Multiplier, 1
instance = comp, \Aval[5]~output , Aval[5]~output, Multiplier, 1
instance = comp, \Aval[6]~output , Aval[6]~output, Multiplier, 1
instance = comp, \Aval[7]~output , Aval[7]~output, Multiplier, 1
instance = comp, \Bval[0]~output , Bval[0]~output, Multiplier, 1
instance = comp, \Bval[1]~output , Bval[1]~output, Multiplier, 1
instance = comp, \Bval[2]~output , Bval[2]~output, Multiplier, 1
instance = comp, \Bval[3]~output , Bval[3]~output, Multiplier, 1
instance = comp, \Bval[4]~output , Bval[4]~output, Multiplier, 1
instance = comp, \Bval[5]~output , Bval[5]~output, Multiplier, 1
instance = comp, \Bval[6]~output , Bval[6]~output, Multiplier, 1
instance = comp, \Bval[7]~output , Bval[7]~output, Multiplier, 1
instance = comp, \AhexU[0]~output , AhexU[0]~output, Multiplier, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, Multiplier, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, Multiplier, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, Multiplier, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, Multiplier, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, Multiplier, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, Multiplier, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, Multiplier, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, Multiplier, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, Multiplier, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, Multiplier, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, Multiplier, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, Multiplier, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, Multiplier, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, Multiplier, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, Multiplier, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, Multiplier, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, Multiplier, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, Multiplier, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, Multiplier, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, Multiplier, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, Multiplier, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, Multiplier, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, Multiplier, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, Multiplier, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, Multiplier, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, Multiplier, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, Multiplier, 1
instance = comp, \clk~input , clk~input, Multiplier, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, Multiplier, 1
instance = comp, \reset~input , reset~input, Multiplier, 1
instance = comp, \clearA_loadB~input , clearA_loadB~input, Multiplier, 1
instance = comp, \CU|increment_counter~feeder , CU|increment_counter~feeder, Multiplier, 1
instance = comp, \CU|increment_counter , CU|increment_counter, Multiplier, 1
instance = comp, \CU|increment_counter~clkctrl , CU|increment_counter~clkctrl, Multiplier, 1
instance = comp, \Counter|count[0]~8 , Counter|count[0]~8, Multiplier, 1
instance = comp, \CU|next_state.RESETST~0 , CU|next_state.RESETST~0, Multiplier, 1
instance = comp, \CU|next_state.RESETST , CU|next_state.RESETST, Multiplier, 1
instance = comp, \run~input , run~input, Multiplier, 1
instance = comp, \CU|next_state~24 , CU|next_state~24, Multiplier, 1
instance = comp, \CU|next_state.RSTCOUNTST , CU|next_state.RSTCOUNTST, Multiplier, 1
instance = comp, \CU|reset_counter~0 , CU|reset_counter~0, Multiplier, 1
instance = comp, \CU|reset_counter , CU|reset_counter, Multiplier, 1
instance = comp, \Counter|count[0] , Counter|count[0], Multiplier, 1
instance = comp, \Counter|count[1]~2 , Counter|count[1]~2, Multiplier, 1
instance = comp, \Counter|count[1] , Counter|count[1], Multiplier, 1
instance = comp, \Counter|count[2]~1 , Counter|count[2]~1, Multiplier, 1
instance = comp, \Counter|count[2] , Counter|count[2], Multiplier, 1
instance = comp, \Counter|count[3]~0 , Counter|count[3]~0, Multiplier, 1
instance = comp, \Counter|count[3] , Counter|count[3], Multiplier, 1
instance = comp, \CU|Equal0~0 , CU|Equal0~0, Multiplier, 1
instance = comp, \Counter|count[4]~7 , Counter|count[4]~7, Multiplier, 1
instance = comp, \Counter|count[4] , Counter|count[4], Multiplier, 1
instance = comp, \Counter|count[5]~6 , Counter|count[5]~6, Multiplier, 1
instance = comp, \Counter|count[5] , Counter|count[5], Multiplier, 1
instance = comp, \Counter|stepper|FA6|CO~0 , Counter|stepper|FA6|CO~0, Multiplier, 1
instance = comp, \Counter|count[6]~5 , Counter|count[6]~5, Multiplier, 1
instance = comp, \Counter|count[6] , Counter|count[6], Multiplier, 1
instance = comp, \Counter|count[7]~3 , Counter|count[7]~3, Multiplier, 1
instance = comp, \Counter|count[7]~4 , Counter|count[7]~4, Multiplier, 1
instance = comp, \Counter|count[7] , Counter|count[7], Multiplier, 1
instance = comp, \CU|Equal0~1 , CU|Equal0~1, Multiplier, 1
instance = comp, \CU|next_state~25 , CU|next_state~25, Multiplier, 1
instance = comp, \CU|next_state.ADDST , CU|next_state.ADDST, Multiplier, 1
instance = comp, \CU|next_state~26 , CU|next_state~26, Multiplier, 1
instance = comp, \CU|next_state.SHIFTST , CU|next_state.SHIFTST, Multiplier, 1
instance = comp, \CU|next_state~30 , CU|next_state~30, Multiplier, 1
instance = comp, \CU|next_state.INCCST , CU|next_state.INCCST, Multiplier, 1
instance = comp, \CU|next_state~29 , CU|next_state~29, Multiplier, 1
instance = comp, \CU|next_state.CCOMPAREST , CU|next_state.CCOMPAREST, Multiplier, 1
instance = comp, \CU|Selector1~0 , CU|Selector1~0, Multiplier, 1
instance = comp, \CU|Selector1~1 , CU|Selector1~1, Multiplier, 1
instance = comp, \CU|next_state.WAITRUNST , CU|next_state.WAITRUNST, Multiplier, 1
instance = comp, \CU|next_state~27 , CU|next_state~27, Multiplier, 1
instance = comp, \CU|next_state~28 , CU|next_state~28, Multiplier, 1
instance = comp, \CU|next_state.NOPST , CU|next_state.NOPST, Multiplier, 1
instance = comp, \CU|next_state~23 , CU|next_state~23, Multiplier, 1
instance = comp, \CU|next_state.CALBST , CU|next_state.CALBST, Multiplier, 1
instance = comp, \CU|clr_ld , CU|clr_ld, Multiplier, 1
instance = comp, \CU|clearA , CU|clearA, Multiplier, 1
instance = comp, \S[7]~input , S[7]~input, Multiplier, 1
instance = comp, \S[1]~input , S[1]~input, Multiplier, 1
instance = comp, \AU|BLoadData[1]~feeder , AU|BLoadData[1]~feeder, Multiplier, 1
instance = comp, \CU|Selector2~0 , CU|Selector2~0, Multiplier, 1
instance = comp, \CU|Selector2~1 , CU|Selector2~1, Multiplier, 1
instance = comp, \CU|reset_au , CU|reset_au, Multiplier, 1
instance = comp, \AU|BLoadData[0]~0 , AU|BLoadData[0]~0, Multiplier, 1
instance = comp, \AU|BLoadData[1] , AU|BLoadData[1], Multiplier, 1
instance = comp, \AU|Breset~feeder , AU|Breset~feeder, Multiplier, 1
instance = comp, \AU|Breset , AU|Breset, Multiplier, 1
instance = comp, \AU|Bloaden~feeder , AU|Bloaden~feeder, Multiplier, 1
instance = comp, \AU|Bloaden , AU|Bloaden, Multiplier, 1
instance = comp, \S[2]~input , S[2]~input, Multiplier, 1
instance = comp, \AU|BLoadData[2]~feeder , AU|BLoadData[2]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[2] , AU|BLoadData[2], Multiplier, 1
instance = comp, \S[3]~input , S[3]~input, Multiplier, 1
instance = comp, \AU|BLoadData[3]~feeder , AU|BLoadData[3]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[3] , AU|BLoadData[3], Multiplier, 1
instance = comp, \AU|BLoadData[7]~feeder , AU|BLoadData[7]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[7] , AU|BLoadData[7], Multiplier, 1
instance = comp, \AU|Areset~0 , AU|Areset~0, Multiplier, 1
instance = comp, \AU|Areset , AU|Areset, Multiplier, 1
instance = comp, \CU|shift , CU|shift, Multiplier, 1
instance = comp, \CU|sub~0 , CU|sub~0, Multiplier, 1
instance = comp, \CU|sub , CU|sub, Multiplier, 1
instance = comp, \AU|ALoadData~0 , AU|ALoadData~0, Multiplier, 1
instance = comp, \AU|Aloaden~0 , AU|Aloaden~0, Multiplier, 1
instance = comp, \AU|Aloaden , AU|Aloaden, Multiplier, 1
instance = comp, \S[0]~input , S[0]~input, Multiplier, 1
instance = comp, \AU|ALoadData[0]~1 , AU|ALoadData[0]~1, Multiplier, 1
instance = comp, \AU|ALoadData[1]~2 , AU|ALoadData[1]~2, Multiplier, 1
instance = comp, \AU|ALoadData[0]~3 , AU|ALoadData[0]~3, Multiplier, 1
instance = comp, \AU|ALoadData[0] , AU|ALoadData[0], Multiplier, 1
instance = comp, \AU|Adder|FA2|CO~0 , AU|Adder|FA2|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|inverter|FA2|CO~0 , AU|Subtractor|inverter|FA2|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA2|CO~0 , AU|Subtractor|subtractor|FA2|CO~0, Multiplier, 1
instance = comp, \AU|ALoadData~6 , AU|ALoadData~6, Multiplier, 1
instance = comp, \AU|ALoadData~7 , AU|ALoadData~7, Multiplier, 1
instance = comp, \AU|ALoadData[2] , AU|ALoadData[2], Multiplier, 1
instance = comp, \S[4]~input , S[4]~input, Multiplier, 1
instance = comp, \AU|Adder|FA3|CO~0 , AU|Adder|FA3|CO~0, Multiplier, 1
instance = comp, \AU|ALoadData~10 , AU|ALoadData~10, Multiplier, 1
instance = comp, \AU|Subtractor|inverter|FA4|CO~0 , AU|Subtractor|inverter|FA4|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|inverter|FA3|CO~0 , AU|Subtractor|inverter|FA3|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA3|CO~0 , AU|Subtractor|subtractor|FA3|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA4|CO~0 , AU|Subtractor|subtractor|FA4|CO~0, Multiplier, 1
instance = comp, \AU|ALoadData~11 , AU|ALoadData~11, Multiplier, 1
instance = comp, \AU|ALoadData~12 , AU|ALoadData~12, Multiplier, 1
instance = comp, \AU|ALoadData[4] , AU|ALoadData[4], Multiplier, 1
instance = comp, \AU|Adder|FA8|S~0 , AU|Adder|FA8|S~0, Multiplier, 1
instance = comp, \S[6]~input , S[6]~input, Multiplier, 1
instance = comp, \AU|Adder|FA5|CO~0 , AU|Adder|FA5|CO~0, Multiplier, 1
instance = comp, \S[5]~input , S[5]~input, Multiplier, 1
instance = comp, \AU|Adder|FA5|CO~1 , AU|Adder|FA5|CO~1, Multiplier, 1
instance = comp, \AU|Adder|FA5|CO~2 , AU|Adder|FA5|CO~2, Multiplier, 1
instance = comp, \AU|Adder|FA6|CO~0 , AU|Adder|FA6|CO~0, Multiplier, 1
instance = comp, \AU|Adder|FA8|S , AU|Adder|FA8|S, Multiplier, 1
instance = comp, \AU|Subtractor|inverter|FA6|CO~0 , AU|Subtractor|inverter|FA6|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|inverter|FA5|CO~0 , AU|Subtractor|inverter|FA5|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA5|CO~0 , AU|Subtractor|subtractor|FA5|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA6|CO~0 , AU|Subtractor|subtractor|FA6|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA7|CO~0 , AU|Subtractor|subtractor|FA7|CO~0, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA8|S , AU|Subtractor|subtractor|FA8|S, Multiplier, 1
instance = comp, \AU|ALoadData~16 , AU|ALoadData~16, Multiplier, 1
instance = comp, \AU|ALoadData[7] , AU|ALoadData[7], Multiplier, 1
instance = comp, \AU|A|data_out~8 , AU|A|data_out~8, Multiplier, 1
instance = comp, \AU|Ashiften~0 , AU|Ashiften~0, Multiplier, 1
instance = comp, \AU|Ashiften , AU|Ashiften, Multiplier, 1
instance = comp, \AU|A|data_out[5]~1 , AU|A|data_out[5]~1, Multiplier, 1
instance = comp, \AU|A|data_out[7] , AU|A|data_out[7], Multiplier, 1
instance = comp, \AU|ALoadData~14 , AU|ALoadData~14, Multiplier, 1
instance = comp, \AU|ALoadData~15 , AU|ALoadData~15, Multiplier, 1
instance = comp, \AU|ALoadData[6] , AU|ALoadData[6], Multiplier, 1
instance = comp, \AU|A|data_out~7 , AU|A|data_out~7, Multiplier, 1
instance = comp, \AU|A|data_out[6] , AU|A|data_out[6], Multiplier, 1
instance = comp, \AU|Adder|FA6|S , AU|Adder|FA6|S, Multiplier, 1
instance = comp, \AU|Subtractor|subtractor|FA6|S , AU|Subtractor|subtractor|FA6|S, Multiplier, 1
instance = comp, \AU|ALoadData~13 , AU|ALoadData~13, Multiplier, 1
instance = comp, \AU|ALoadData[5] , AU|ALoadData[5], Multiplier, 1
instance = comp, \AU|A|data_out~6 , AU|A|data_out~6, Multiplier, 1
instance = comp, \AU|A|data_out[5] , AU|A|data_out[5], Multiplier, 1
instance = comp, \AU|A|data_out~5 , AU|A|data_out~5, Multiplier, 1
instance = comp, \AU|A|data_out[4] , AU|A|data_out[4], Multiplier, 1
instance = comp, \AU|ALoadData~8 , AU|ALoadData~8, Multiplier, 1
instance = comp, \AU|ALoadData~9 , AU|ALoadData~9, Multiplier, 1
instance = comp, \AU|ALoadData[3] , AU|ALoadData[3], Multiplier, 1
instance = comp, \AU|A|data_out~4 , AU|A|data_out~4, Multiplier, 1
instance = comp, \AU|A|data_out[3] , AU|A|data_out[3], Multiplier, 1
instance = comp, \AU|A|data_out~3 , AU|A|data_out~3, Multiplier, 1
instance = comp, \AU|A|data_out[2] , AU|A|data_out[2], Multiplier, 1
instance = comp, \AU|ALoadData~4 , AU|ALoadData~4, Multiplier, 1
instance = comp, \AU|ALoadData~5 , AU|ALoadData~5, Multiplier, 1
instance = comp, \AU|ALoadData[1] , AU|ALoadData[1], Multiplier, 1
instance = comp, \AU|A|data_out~2 , AU|A|data_out~2, Multiplier, 1
instance = comp, \AU|A|data_out[1] , AU|A|data_out[1], Multiplier, 1
instance = comp, \AU|A|data_out~0 , AU|A|data_out~0, Multiplier, 1
instance = comp, \AU|A|data_out[0] , AU|A|data_out[0], Multiplier, 1
instance = comp, \AU|B|data_out~8 , AU|B|data_out~8, Multiplier, 1
instance = comp, \AU|Bshiften~0 , AU|Bshiften~0, Multiplier, 1
instance = comp, \AU|Bshiften , AU|Bshiften, Multiplier, 1
instance = comp, \AU|B|data_out[7]~1 , AU|B|data_out[7]~1, Multiplier, 1
instance = comp, \AU|B|data_out[7] , AU|B|data_out[7], Multiplier, 1
instance = comp, \AU|BLoadData[6]~feeder , AU|BLoadData[6]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[6] , AU|BLoadData[6], Multiplier, 1
instance = comp, \AU|B|data_out~7 , AU|B|data_out~7, Multiplier, 1
instance = comp, \AU|B|data_out[6] , AU|B|data_out[6], Multiplier, 1
instance = comp, \AU|BLoadData[5]~feeder , AU|BLoadData[5]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[5] , AU|BLoadData[5], Multiplier, 1
instance = comp, \AU|B|data_out~6 , AU|B|data_out~6, Multiplier, 1
instance = comp, \AU|B|data_out[5] , AU|B|data_out[5], Multiplier, 1
instance = comp, \AU|BLoadData[4]~feeder , AU|BLoadData[4]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[4] , AU|BLoadData[4], Multiplier, 1
instance = comp, \AU|B|data_out~5 , AU|B|data_out~5, Multiplier, 1
instance = comp, \AU|B|data_out[4] , AU|B|data_out[4], Multiplier, 1
instance = comp, \AU|B|data_out~4 , AU|B|data_out~4, Multiplier, 1
instance = comp, \AU|B|data_out[3] , AU|B|data_out[3], Multiplier, 1
instance = comp, \AU|B|data_out~3 , AU|B|data_out~3, Multiplier, 1
instance = comp, \AU|B|data_out[2] , AU|B|data_out[2], Multiplier, 1
instance = comp, \AU|B|data_out~2 , AU|B|data_out~2, Multiplier, 1
instance = comp, \AU|B|data_out[1] , AU|B|data_out[1], Multiplier, 1
instance = comp, \AU|BLoadData[0]~feeder , AU|BLoadData[0]~feeder, Multiplier, 1
instance = comp, \AU|BLoadData[0] , AU|BLoadData[0], Multiplier, 1
instance = comp, \AU|B|data_out~0 , AU|B|data_out~0, Multiplier, 1
instance = comp, \AU|B|data_out[0] , AU|B|data_out[0], Multiplier, 1
instance = comp, \CU|add~0 , CU|add~0, Multiplier, 1
instance = comp, \CU|add~1 , CU|add~1, Multiplier, 1
instance = comp, \CU|add , CU|add, Multiplier, 1
instance = comp, \AU|x~0 , AU|x~0, Multiplier, 1
instance = comp, \AU|x~1 , AU|x~1, Multiplier, 1
instance = comp, \AU|x~2 , AU|x~2, Multiplier, 1
instance = comp, \AU|x , AU|x, Multiplier, 1
instance = comp, \AUd|WideOr6~0 , AUd|WideOr6~0, Multiplier, 1
instance = comp, \AUd|WideOr5~0 , AUd|WideOr5~0, Multiplier, 1
instance = comp, \AUd|WideOr4~0 , AUd|WideOr4~0, Multiplier, 1
instance = comp, \AUd|WideOr3~0 , AUd|WideOr3~0, Multiplier, 1
instance = comp, \AUd|WideOr2~0 , AUd|WideOr2~0, Multiplier, 1
instance = comp, \AUd|WideOr1~0 , AUd|WideOr1~0, Multiplier, 1
instance = comp, \AUd|WideOr0~0 , AUd|WideOr0~0, Multiplier, 1
instance = comp, \ALd|WideOr6~0 , ALd|WideOr6~0, Multiplier, 1
instance = comp, \ALd|WideOr5~0 , ALd|WideOr5~0, Multiplier, 1
instance = comp, \ALd|WideOr4~0 , ALd|WideOr4~0, Multiplier, 1
instance = comp, \ALd|WideOr3~0 , ALd|WideOr3~0, Multiplier, 1
instance = comp, \ALd|WideOr2~0 , ALd|WideOr2~0, Multiplier, 1
instance = comp, \ALd|WideOr1~0 , ALd|WideOr1~0, Multiplier, 1
instance = comp, \ALd|WideOr0~0 , ALd|WideOr0~0, Multiplier, 1
instance = comp, \BUd|WideOr6~0 , BUd|WideOr6~0, Multiplier, 1
instance = comp, \BUd|WideOr5~0 , BUd|WideOr5~0, Multiplier, 1
instance = comp, \BUd|WideOr4~0 , BUd|WideOr4~0, Multiplier, 1
instance = comp, \BUd|WideOr3~0 , BUd|WideOr3~0, Multiplier, 1
instance = comp, \BUd|WideOr2~0 , BUd|WideOr2~0, Multiplier, 1
instance = comp, \BUd|WideOr1~0 , BUd|WideOr1~0, Multiplier, 1
instance = comp, \BUd|WideOr0~0 , BUd|WideOr0~0, Multiplier, 1
instance = comp, \BLd|WideOr6~0 , BLd|WideOr6~0, Multiplier, 1
instance = comp, \BLd|WideOr5~0 , BLd|WideOr5~0, Multiplier, 1
instance = comp, \BLd|WideOr4~0 , BLd|WideOr4~0, Multiplier, 1
instance = comp, \BLd|WideOr3~0 , BLd|WideOr3~0, Multiplier, 1
instance = comp, \BLd|WideOr2~0 , BLd|WideOr2~0, Multiplier, 1
instance = comp, \BLd|WideOr1~0 , BLd|WideOr1~0, Multiplier, 1
instance = comp, \BLd|WideOr0~0 , BLd|WideOr0~0, Multiplier, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
